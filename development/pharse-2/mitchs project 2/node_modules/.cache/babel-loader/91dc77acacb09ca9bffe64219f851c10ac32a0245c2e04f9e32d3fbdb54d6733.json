{"ast":null,"code":"const fetchData = async () => {\n  try {\n    // Fetch breakfast data\n    const resBreakfast = await fetch('http://localhost:3000/breakfast');\n    if (!resBreakfast.ok) {\n      throw new Error(`Failed to fetch breakfast: ${resBreakfast.statusText}`);\n    }\n    setBreakfast(await resBreakfast.json());\n\n    // Fetch lunch data\n    const resLunch = await fetch('http://localhost:3000/lunch');\n    if (!resLunch.ok) {\n      throw new Error(`Failed to fetch lunch: ${resLunch.statusText}`);\n    }\n    setLunch(await resLunch.json());\n\n    // Fetch dinner data\n    const resDinner = await fetch('http://localhost:3000/dinner');\n    if (!resDinner.ok) {\n      throw new Error(`Failed to fetch dinner: ${resDinner.statusText}`);\n    }\n    setDinner(await resDinner.json());\n\n    // Fetch dessert data\n    const resDessert = await fetch('http://localhost:3000/dessert');\n    if (!resDessert.ok) {\n      throw new Error(`Failed to fetch dessert: ${resDessert.statusText}`);\n    }\n    setDessert(await resDessert.json());\n  } catch (error) {\n    console.error(\"Error fetching data:\", error.message);\n    // Optionally, you can set some state here to display an error message in the UI\n  }\n};","map":{"version":3,"names":["fetchData","resBreakfast","fetch","ok","Error","statusText","setBreakfast","json","resLunch","setLunch","resDinner","setDinner","resDessert","setDessert","error","console","message"],"sources":["/home/moneykicks/development/react-restaurant/src/pages/Menu.js"],"sourcesContent":["const fetchData = async () => {\n    try {\n        // Fetch breakfast data\n        const resBreakfast = await fetch('http://localhost:3000/breakfast');\n        if (!resBreakfast.ok) {\n            throw new Error(`Failed to fetch breakfast: ${resBreakfast.statusText}`);\n        }\n        setBreakfast(await resBreakfast.json());\n\n        // Fetch lunch data\n        const resLunch = await fetch('http://localhost:3000/lunch');\n        if (!resLunch.ok) {\n            throw new Error(`Failed to fetch lunch: ${resLunch.statusText}`);\n        }\n        setLunch(await resLunch.json());\n\n        // Fetch dinner data\n        const resDinner = await fetch('http://localhost:3000/dinner');\n        if (!resDinner.ok) {\n            throw new Error(`Failed to fetch dinner: ${resDinner.statusText}`);\n        }\n        setDinner(await resDinner.json());\n\n        // Fetch dessert data\n        const resDessert = await fetch('http://localhost:3000/dessert');\n        if (!resDessert.ok) {\n            throw new Error(`Failed to fetch dessert: ${resDessert.statusText}`);\n        }\n        setDessert(await resDessert.json());\n\n    } catch (error) {\n        console.error(\"Error fetching data:\", error.message);\n        // Optionally, you can set some state here to display an error message in the UI\n    }\n};\n"],"mappings":"AAAA,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC1B,IAAI;IACA;IACA,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;IACnE,IAAI,CAACD,YAAY,CAACE,EAAE,EAAE;MAClB,MAAM,IAAIC,KAAK,CAAE,8BAA6BH,YAAY,CAACI,UAAW,EAAC,CAAC;IAC5E;IACAC,YAAY,CAAC,MAAML,YAAY,CAACM,IAAI,CAAC,CAAC,CAAC;;IAEvC;IACA,MAAMC,QAAQ,GAAG,MAAMN,KAAK,CAAC,6BAA6B,CAAC;IAC3D,IAAI,CAACM,QAAQ,CAACL,EAAE,EAAE;MACd,MAAM,IAAIC,KAAK,CAAE,0BAAyBI,QAAQ,CAACH,UAAW,EAAC,CAAC;IACpE;IACAI,QAAQ,CAAC,MAAMD,QAAQ,CAACD,IAAI,CAAC,CAAC,CAAC;;IAE/B;IACA,MAAMG,SAAS,GAAG,MAAMR,KAAK,CAAC,8BAA8B,CAAC;IAC7D,IAAI,CAACQ,SAAS,CAACP,EAAE,EAAE;MACf,MAAM,IAAIC,KAAK,CAAE,2BAA0BM,SAAS,CAACL,UAAW,EAAC,CAAC;IACtE;IACAM,SAAS,CAAC,MAAMD,SAAS,CAACH,IAAI,CAAC,CAAC,CAAC;;IAEjC;IACA,MAAMK,UAAU,GAAG,MAAMV,KAAK,CAAC,+BAA+B,CAAC;IAC/D,IAAI,CAACU,UAAU,CAACT,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAE,4BAA2BQ,UAAU,CAACP,UAAW,EAAC,CAAC;IACxE;IACAQ,UAAU,CAAC,MAAMD,UAAU,CAACL,IAAI,CAAC,CAAC,CAAC;EAEvC,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACpD;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}